// <auto-generated />
using System;
using MartianRobots.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MartianRobots.Persistence.Migrations
{
    [DbContext(typeof(MartianRobotsDbContext))]
    [Migration("20210906182930_AddedExploredSurfaceRateColumn")]
    partial class AddedExploredSurfaceRateColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MartianRobots.Domain.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("played_at");

                    b.Property<double>("ExploredSurfaceRate")
                        .HasColumnType("float")
                        .HasColumnName("explored_surface_rate");

                    b.Property<int>("LostRobots")
                        .HasColumnType("int")
                        .HasColumnName("lost_robots_count");

                    b.Property<int>("WonRobots")
                        .HasColumnType("int")
                        .HasColumnName("winning_robots_count");

                    b.HasKey("Id");

                    b.ToTable("games");
                });

            modelBuilder.Entity("MartianRobots.Domain.Entities.GameResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("calculated_at");

                    b.Property<string>("EndCoordinate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("end_coordinate");

                    b.Property<int>("EndOrientation")
                        .HasColumnType("int")
                        .HasColumnName("end_orientation");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("game_id");

                    b.Property<bool>("HasFallen")
                        .HasColumnType("bit")
                        .HasColumnName("lost");

                    b.Property<string>("InitialCoordinate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("initial_coordinate");

                    b.Property<int>("InitialOrientation")
                        .HasColumnType("int")
                        .HasColumnName("init_orientation");

                    b.Property<string>("Instructions")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("instructions")
                        .IsFixedLength(false);

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("game_results");
                });

            modelBuilder.Entity("MartianRobots.Domain.Entities.GameResult", b =>
                {
                    b.HasOne("MartianRobots.Domain.Entities.Game", "Game")
                        .WithMany("GameResults")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("MartianRobots.Domain.Entities.Game", b =>
                {
                    b.Navigation("GameResults");
                });
#pragma warning restore 612, 618
        }
    }
}
